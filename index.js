const {exec, pwd} = require('shelljs')
const {existsSync, mkdirSync, writeFileSync, rmdirSync} = require('fs')
const {randomBytes} = require('crypto')
const {join} = require('path')
const {copySync} = require('fs-extra')

require('dotenv').config()
const fs = require('fs')
const S3 = require('aws-sdk/clients/s3')

const bucketName = process.env.AWS_BUCKET_NAME
const region = process.env.AWS_BUCKET_REGION
const accessKeyId = process.env.AWS_ACCESS_KEY
const secretAccessKey = process.env.AWS_SECRET_KEY

const s3 = new S3({
    region,
    accessKeyId,
    secretAccessKey
})

// uploads a file to s3
function uploadFile(file) {
    const fileStream = fs.createReadStream(file.path)

    const uploadParams = {
        Bucket: bucketName,
        Body: fileStream,
        Key: file.filename
    }

    return s3.upload(uploadParams).promise()
}

exports.uploadFile = uploadFile


exports.handler = function main(event, context) {
    // const dir = './tempo';
    // if (!existsSync(dir)){
    //     mkdirSync(dir);
    // }
    const dir = '/tmp';
    const website = 'judith.ctunnels.com'

    const config =
        `import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'

export default function Home() {
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Judith App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/next/src/public/favicon.ico" />
      </Head>

     

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}
`
    // writeFileSync(`pages/testo.js`, config);



    const wd = pwd().stdout

    var neration = exec(`${wd}/export.sh`,{async:true}).stdout;
    console.log(neration)
    console.log('finished exporting?')

    const webdir = `/mnt/test/${website}`
    if (!existsSync(webdir)) {
        mkdirSync(webdir)
    }
    const source = `${dir}/out`
    copySync.copy(source, webdir, function (err) {
        if (err) {
            console.log('An error occured while copying the folder.')
            return console.error(err)
        }
        console.log('Copy completed!')
    })

    rmdirSync(`${dir}/out`, {recursive: true})
    // rmdirSync(`${dir}/pages`, {recursive: true})
    // rmdirSync(`${dir}/public`, {recursive: true})
    // rmdirSync(`${dir}/styles`, {recursive: true})
    // rmdirSync(`${dir}/.next`, {recursive: true})

}
